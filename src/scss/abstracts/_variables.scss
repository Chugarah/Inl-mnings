/* Fonts */
/* Font Colors */
$font-color-primary: #565973;
$font-color-secondary: #0b0f19;
$font-color-text: #585c7b;
$font-color-label: #131022;
/* Fonts END */


/// Colors
$color-primary: #6366F1; 
$color-white: #FFFFFF;
$color-form: #9397AD;

// =============================================================================
// Fonts
// =============================================================================
/* https://sass-lang.com/documentation/style-rules/declarations/ */

/// 
/// Manrope
$font-family: "Manrope", sans-serif;
$font-location-url: url("/src/assets/fonts/Manrope/Manrope-VariableFont_wght.ttf");
$font-primary-style: normal;
$font-optical-sizing: auto;
$font-weight:(
    'ExtraLight': 200,
    'Light': 300,
    'Medium': 500,
    'SemiBold': 600,
    'Bold': 700,
    'ExtraBold': 800
);

$font-sizes:(
    't-xs': 0.75rem,
    't-s': 0.875rem,
    't-m': 1rem,
    't-l': 1.125rem,
    't-xl': 125rem,
    't-lt': 1.5rem
);
$display-heading:(
    'd-1': 5rem,
    'd-2': 4.5rem,
    'd-3': 4rem,
    'd-4': 3.5rem,
    'd-5': 3rem,
    'd-6': 2.625em
);
$headings:(
    'h-1': 2.5rem,
    'h-2': 2rem,
    'h-3': 1.75rem,
    'h-4': 1.5rem,
    'h-5': 1.25rem,
    'h-6': 1rem
);




/// @name links-color
/// Specifying Colors for all links in the website
/// @type Map
/// @group Layout
/// @example code-scss
///   .element {
///     font-color: map-get($map: $links-color, $key: 'link-nav');
///   }
$links-color:(
    'link-nav' : #33354D,
    'link-bar' : #3E4265
);


/// @name links-color
/// Specifying Colors for all links in the website
/// @type Map
/// @group Layout
/// @example code-scss
///   .element {
///     font-color: map-get($map: $links-color, $key: 'link-nav');
///   }








// =============================================================================
// Layout
// =============================================================================

/// @name content-width-percentage
/// @group Utilities
/// Description of the variable
/// @type number
/// @access public
/// @example code-scss
///   .element {
///      width: map-get($map: $content-width, $key: 'full-width');
///   }
$content-width-percentage: (
    'full-width': 100%,
    'half-width': 50%
);


/// @name display-type
/// Map of display types for consistent usage across the project
/// @type Map
/// @group Layout
/// @access public
/// @example code-scss
///   .element {
///      display: map-get($map: $display-type, $key: 'flex');
///   }
$display-type: (
    'flex': flex,
    'grid': grid,
    'none': none
);


/// @name breakpoints
/// Map of breakpoints regarding responsive
/// @type Map
/// @group Layout
/// @example code-scss
///   .element {
///     media (min-width: display: map-get($map: $breakpoints, $key: 'medium')){
///         background-color: red;
///     }
$breakpoints: (
    'mobile': 390px,
    'small': 500px,
    'medium': 768px,
    'xlarge': 1200px,
    'xlarge-2': 1340px
);


/// @name max-content
/// Max content width values depending on device
/// @type Map
/// @group Layout
/// @example code-scss
///   .element {
///     max-width: map-get($map: $max-content-width, $key: 'desktop');
///   }
$max-content-width: (
    'desktop': 81.25rem,
    'tablet': 48rem,
    'mobile': 24.375rem
);

/// @name gaps
/// Maps for different gaps size based on the layout
/// @type Map
/// @group Layout
/// @example code-scss
///   .element {
///     gap: map-get($map: $gaps, $key: 'g-3-1');
///   }
$spacing-distance:(
    's-0-15': 0.5em,
    's-0-56': 0.5625em,
    's-0-62': 0.625em,
    's-1-1': 1em,
    's-1-25': 1.25em,
    's-1-87': 1.875em,
    's-2-50': 2.5em,
    's-3-31': 3.125em
);


/// @name border-radius
/// Border radius sizes :)
/// @type Map
/// @group Layout
/// @example code-scss
///   .element {
///     border-radius: map-get($map: $border-radius, $key: 'p-2-2');
///   }
$border-radius:(
    'r-0-2': 0.25em,
    'r-2-2': 2.25em
);