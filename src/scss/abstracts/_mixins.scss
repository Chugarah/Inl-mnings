/// @name container-query-wrapper
/// @group Layout
///
/// Creates a container for container queries
///
/// This mixin sets up a container to be used with CSS Container Queries.
/// It sets the container-type to inline-size and assigns a custom container-name.
///
/// @param {String} $container-name - The name of the container to be used in container queries
///
/// @example code-scss
///   .my-component {
///     @include container-query-wrapper('component-container');
///   }
///
/// @example code-css
///   .my-component {
///     container-type: inline-size;
///     container-name: component-container;
///   }
@mixin container-query-wrapper($container-name) {
  container-type: inline-size;
  container-name: $container-name;
}


/// @name grid-auto-height
/// @group Layout
///
/// Creates CSS Grid where auto size for height is based
/// on the content
///
/// @param {String} $gah-display-type-value - Value, grid, flex or something else, display type
/// @param {List} $gah-colums - List that is separated with space, amount of colums and size
/// @param {Number} $grid-row-repeat - How many times row should repeat
/// @param {Object} $gah-display-map - Contains Map for display type from vars
/// @param {List} $gah-display-map - Contains Map for display type from vars
/// @example code-scss
/// @include a.grid-auto-height(grid, a.grid-add-colum(1fr), 3, a.$display-type)
@mixin grid-row-colum($gah-display-type-value, $gah-colums, $grid-row-repeat, $gah-display-map, $gah-row-height) {
  display: map-get($map: $gah-display-map, $key: $gah-display-type-value);
  grid-template-columns: $gah-colums;
  grid-template-rows: $gah-row-height;
}

/// Ai Generated from Phind
/// @name container-query
/// @group Layout
///
/// We are setting an container query and based on min and max values
/// we are passing content further using @content code
///
/// @param {String} $container-name - Container name (Wrapper name)
/// @param {String} $min - Minimum width of the container
/// @param {String} $max - Maximum width of the container
/// @example code-scss
/// @include a.container-query(header,0, 768px){
///  .header-navigation{
///   background-color: blue;
///  }
/// }
@mixin container-query($container-name, $min, $max: null) {
  @if $max {
    @container #{$container-name} (min-width: #{$min}) and (max-width: #{$max - 1}) {
      /// Passing the content further
      @content;
    }
  }
  @else if $min {
    @container #{$container-name} (min-width: #{$min}) {
      /// Passing the content further
      @content;
    }
  }
}

/// @name content-width
/// @group Layout
///
/// Setting max with of content element and also the with
///
/// @param {String} $max-width - Max width for the content
/// @param {String} $width - With of the content
/// @example code-scss
///   @include content-width(81.25rem, 100%)
/// }
@mixin content-width($max-width, $width){
  max-width: $max-width;
  margin: 0 auto;
  width: $width;
}


@mixin flex($align-items){
  display: flex;
  align-items: $align-items;
}